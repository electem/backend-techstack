{"version":3,"sources":["./src/app/services/tutorial.service.ts","./src/environments/environment.ts","./src/app/components/tutorial-details/tutorial-details.component.ts","./src/app/components/tutorial-details/tutorial-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/headers.interceptor.ts","./src/app/components/validation/validation.component.ts","./src/app/components/validation/validation.component.html","./src/app/components/form-tutorial/form-tutorial.component.ts","./src/app/components/form-tutorial/form-tutorial.component.html","./src/app/app.module.ts","./src/app/models/category.model.ts","./src/app/components/tutorials-list/tutorials-list.component.ts","./src/app/components/tutorials-list/tutorials-list.component.html","./src/app/models/tutorial.model.ts","./src/app/app-routing.module.ts","./src/app/components/add-tutorial/add-tutorial.component.ts","./src/app/components/add-tutorial/add-tutorial.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Tutorial } from '../models/tutorial.model';\r\nimport { Category } from '../models/category.model';\r\n\r\nconst baseUrl = 'http://localhost:8000/tutorial';\r\nconst baseUrl1 = 'http://localhost:8000/category';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TutorialService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getAll(): Promise<Tutorial[]> {\r\n    return await this.http.get<Tutorial[]>(baseUrl).toPromise();\r\n  }\r\n\r\n  async getAllCategory(): Promise<Category[]> {\r\n    return await this.http.get<Category[]>(baseUrl1).toPromise();\r\n  }\r\n\r\n  async getCategoryById(id: any): Promise<Category[]> {\r\n    return await this.http.get<Category[]>(baseUrl1).toPromise();\r\n  }\r\n\r\n  async getbyId(id: number) {\r\n    return await this.http.get(`${baseUrl}/${id}`).toPromise();\r\n  }\r\n  async getTutor(id: Number): Promise<Tutorial> {\r\n    return await this.http.get(`${baseUrl}/${id}`).toPromise();\r\n  }\r\n\r\n  createTutorial(data: any) {\r\n    return this.http.post(baseUrl, data).toPromise();\r\n  }\r\n\r\n  async createCategory(data: any): Promise<Category[]> {\r\n    return await this.http.post<Category[]>(baseUrl1, data).toPromise();\r\n  }\r\n  async update(data: any) {\r\n    return this.http.put(baseUrl, data).toPromise();\r\n  }\r\n\r\n  deletebyid(id: any) {\r\n    return this.http.delete(`${baseUrl}/${id}`).toPromise();\r\n  }\r\n\r\n  deleteAll() {\r\n    return this.http.delete(baseUrl).toPromise();\r\n  }\r\n\r\n  filterByTitle(title: any) {\r\n    return this.http.get<Tutorial>(`${baseUrl}?title=${title}`).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tutorial } from 'src/app/models/tutorial.model';\r\nimport { Category } from 'src/app/models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-tutorial-details',\r\n  templateUrl: './tutorial-details.component.html',\r\n  styleUrls: ['./tutorial-details.component.css'],\r\n})\r\nexport class TutorialDetailsComponent implements OnInit {\r\n  currentTutorial: Tutorial = {\r\n    title: '',\r\n    description: '',\r\n    published: false,\r\n    categories: [],\r\n  };\r\n  message = '';\r\n  categories!: Category[];\r\n  constructor(\r\n    private tutorialService: TutorialService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.retriveCategory();\r\n    this.getTutorialbyId(this.route.snapshot.params.id);\r\n  }\r\n\r\n  async retriveCategory(): Promise<void> {\r\n    this.categories = await this.tutorialService.getAllCategory();\r\n  }\r\n  async getTutorialbyId(id: number) {\r\n    this.currentTutorial = await this.tutorialService.getbyId(id);\r\n  }\r\n\r\n  updatePublished(status: boolean): void {\r\n    const data = {\r\n      title: this.currentTutorial.title,\r\n      description: this.currentTutorial.description,\r\n      published: status,\r\n    };\r\n\r\n    // this.message = '';\r\n    // this.tutorialService.update(this.currentTutorial.id, data);\r\n\r\n    // this.tutorialService.update(this.currentTutorial.id, data).subscribe(\r\n    //   (response) => {\r\n    //     this.currentTutorial.published = status;\r\n    //     console.log(response);\r\n    //     this.message = response.message\r\n    //       ? response.message\r\n    //       : 'This tutorial was updated successfully!';\r\n    //   },\r\n    //   (error) => {\r\n    //     console.log(error);\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  // updateTutorial(): void {\r\n  //   this.message = '';\r\n\r\n  //   this.tutorialService\r\n  //     .update(this.currentTutorial.id, this.currentTutorial)\r\n  //     .subscribe(\r\n  //       (response) => {\r\n  //         console.log(response);\r\n  //         this.message = response.message\r\n  //           ? response.message\r\n  //           : 'This tutorial was updated successfully!';\r\n  //       },\r\n  //       (error) => {\r\n  //         console.log(error);\r\n  //       }\r\n  //     );\r\n  // }\r\n  // updateTutorial() {\r\n  //   this.message = '';\r\n\r\n  //   this.tutorialService.update(this.currentTutorial.id, this.currentTutorial);\r\n  // }\r\n\r\n  // deleteTutorial() {\r\n  //   this.tutorialService.delete(this.currentTutorial.id).subscribe(\r\n  //     (response) => {\r\n  //       this.router.navigate(['/tutorials']);\r\n  //       console.log(response);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  //   this.router.navigate(['/tutorials']);\r\n  // }\r\n\r\n  async deletebyid() {\r\n    await this.tutorialService.deletebyid(this.currentTutorial.id);\r\n  }\r\n}\r\n","<div>\r\n  <div *ngIf=\"currentTutorial.id\" class=\"edit-form\">\r\n    <h4>Tutorial</h4>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"title\"\r\n          [(ngModel)]=\"currentTutorial.title\"\r\n          name=\"title\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"description\"\r\n          [(ngModel)]=\"currentTutorial.description\"\r\n          name=\"description\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label><strong>Status:</strong></label>\r\n        {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\r\n      </div>\r\n    </form>\r\n    <div class=\"col-md-6\">\r\n      <select class=\"custom-select\">\r\n        [(ngModel)]=\"currentTutorial.categories\r\n        <option *ngFor=\"let category of categories\" [ngValue]=\"category\">\r\n          {{ category.title }}\r\n        </option>\r\n      </select>\r\n      <br />\r\n    </div>\r\n    <br />\r\n\r\n    <button\r\n      class=\"\"\r\n      *ngIf=\"currentTutorial.published\"\r\n      (click)=\"updatePublished(false)\"\r\n    >\r\n      UnPublish\r\n    </button>\r\n    <button\r\n      *ngIf=\"!currentTutorial.published\"\r\n      class=\"\"\r\n      (click)=\"updatePublished(true)\"\r\n    >\r\n      Publish\r\n    </button>\r\n\r\n    <button (click)=\"deletebyid()\" routerLink=\"/tutorials\">Delete</button>\r\n\r\n    <!-- <button type=\"submit\" class=\"\" (click)=\"updateTutorial()\">Update</button> -->\r\n    <p>{{ message }}</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"!currentTutorial.id\">\r\n    <br />\r\n    <p>Cannot access this Tutorial...</p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  ngOnInit(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  title = 'Angular 11 Crud';\r\n}\r\n","<div>\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n    <a href=\"#\" class=\"navbar-brand\">bezKoder</a>\r\n    <div class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"tutorials\" class=\"nav-link\">Tutorials</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"add\" class=\"nav-link\">Add</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"'tutorialform'\" class=\"nav-link\">TutorialForm</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"validation\" class=\"nav-link\">validation</a>\r\n      </li>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"container mt-3\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tutorial } from './models/tutorial.model';\nimport { TutorialService } from './services/tutorial.service';\nimport { FormTutorialComponent } from './components/form-tutorial/form-tutorial.component';\n\nconst baseUrl = 'http://localhost:8000/tutorial';\n\n@Injectable()\nexport class HeadersInterceptor implements HttpInterceptor {\n  tutorial: Tutorial = {\n    title: '',\n    description: '',\n    published: false,\n    categories: [],\n  };\n\n  constructor(private tutorialService: TutorialService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    console.log(request);\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './validation.component.html',\n  styleUrls: ['./validation.component.css'],\n})\nexport class ValidationComponent implements OnInit {\n  registerForm!: FormGroup;\n  submitted = false;\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      age: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      tnc: ['', Validators.required],\n    });\n  }\n  get fval() {\n    return this.registerForm.controls;\n  }\n  //this.user.fullName='';\n  signup() {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n    alert('form fields are validated successfully!');\n  }\n}\n","<div style=\"text-align: center; padding: 20px\">\n  <h3>Angular 8 Reactive Form Validation Example and Tutorial</h3>\n</div>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4 offset-md-4\">\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"signup()\">\n        <div class=\"formbox\">\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              formControlName=\"fullName\"\n              class=\"form-control\"\n              placeholder=\"Full Name\"\n              [ngClass]=\"{ 'is-invalid': submitted && fval.fullName.errors }\"\n            />\n            <div\n              *ngIf=\"submitted && fval.fullName.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"fval.fullName.errors.required\">\n                Full Name is required and must be a valid name\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"email\"\n              formControlName=\"email\"\n              class=\"form-control\"\n              placeholder=\"Email\"\n              [ngClass]=\"{ 'is-invalid': submitted && fval.email.errors }\"\n            />\n            <div\n              *ngIf=\"submitted && fval.email.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"fval.email.errors.required\">Email is required</div>\n              <div *ngIf=\"fval.email.errors.email\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              formControlName=\"phone\"\n              class=\"form-control\"\n              placeholder=\"Phone No.\"\n              maxlength=\"12\"\n              minlength=\"10\"\n              [ngClass]=\"{ 'is-invalid': submitted && fval.phone.invalid }\"\n              required\n            />\n            <div\n              *ngIf=\"submitted && fval.phone.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"fval.phone.errors.required\">Phone is required</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              formControlName=\"age\"\n              class=\"form-control\"\n              placeholder=\"Age\"\n              maxlength=\"12\"\n              minlength=\"10\"\n              [ngClass]=\"{ 'is-invalid': submitted && fval.age.invalid }\"\n              required\n            />\n            <div *ngIf=\"submitted && fval.age.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"fval.age.errors.required\">Age is required</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              class=\"form-control\"\n              placeholder=\"Password\"\n              [ngClass]=\"{ 'is-invalid': submitted && fval.password.errors }\"\n            />\n            <div\n              *ngIf=\"submitted && fval.password.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div ngClass=\"fval.password.errors.required\">\n                Password is required.\n              </div>\n              <div *ngIf=\"fval.password.errors.minlength\">\n                Password must be at least 6 characters\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              formControlName=\"confirmPassword\"\n              class=\"form-control\"\n              placeholder=\"Confirm Password\"\n              [ngClass]=\"{\n                'is-invalid': submitted && fval.confirmPassword.errors\n              }\"\n              appConfirmEqualValidator=\"password\"\n            />\n            <div\n              *ngIf=\"submitted && fval.confirmPassword.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"fval.confirmPassword.errors.required\">\n                Confirm password is required\n              </div>\n              <div *ngIf=\"fval.confirmPassword.errors?.notEqual\">\n                Password Mismatch\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"checkboxrow\">\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                id=\"tnc\"\n                formControlName=\"tnc\"\n                [ngClass]=\"{ 'is-invalid': submitted && fval.tnc.errors }\"\n              />\n              <label for=\"tnc\" class=\"form-check-label\"\n                >Agree with terms and conditions</label\n              >\n              <div\n                *ngIf=\"submitted && fval.tnc.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div>Please agree with terms and conditions</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary signin\">\n              Sign Up\n              <span class=\"arrowbtn\"\n                ><span class=\"fa fa-arrow-right\"></span\n              ></span>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { Tutorial } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n  selector: 'app-form-tutorial',\n  templateUrl: './form-tutorial.component.html',\n  styleUrls: ['./form-tutorial.component.css'],\n})\nexport class FormTutorialComponent implements OnInit {\n  registerForm!: FormGroup;\n  submitted: boolean = false;\n  update: boolean = true;\n  tutorials?: Tutorial[];\n  tutorial: Tutorial = {\n    title: '',\n    description: '',\n    published: false,\n    categories: [],\n  };\n\n  tutorialData: Tutorial = {\n    title: '',\n    description: '',\n    published: false,\n    categories: [],\n  };\n\n  categories?: Category[];\n  selectedCategory = new Category();\n  selectedCategories: Category[] = [];\n  selectedTutorial = new Tutorial();\n  selectedValue!: any;\n  updateCategory!: Category[];\n  constructor(\n    private tutorialService: TutorialService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.retriveCategory();\n    if (this.route.snapshot.params.id != 'add') {\n      this.getTutorialbyId(this.route.snapshot.params.id);\n      this.update = false;\n    }\n    this.registerForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      published: ['', Validators.required],\n      categories: ['', Validators.required],\n    });\n  }\n\n  async retriveCategory(): Promise<void> {\n    this.categories = await this.tutorialService.getAllCategory();\n  }\n  async getTutorialbyId(id: number) {\n    // this.tutorial = await this.tutorialService.getbyId(id);\n    this.tutorials = JSON.parse(localStorage.getItem('allTutorials') || '{}');\n    // if (this.tutorials) {\n    this.tutorial = this.tutorials?.find((x) => x.id == id)!;\n    // }\n  }\n  async getTutorial(id: Number) {\n    const data = await this.tutorialService.getTutor(id);\n    this.tutorial = data;\n    if (data.categories) {\n      this.selectedCategory = data.categories[0];\n    }\n  }\n  async retrieveTutorials(): Promise<void> {\n    this.tutorials = await this.tutorialService.getAll();\n  }\n\n  onSelected(value: Category) {\n    if (this.categories) {\n      for (let category of this.categories) {\n        if (category.id == value.id) {\n          this.selectedCategories.push(category);\n        }\n      }\n    }\n  }\n  get fval() {\n    return this.registerForm.controls;\n  }\n  // async saveTutorial() {\n  //   this.submitted = true;\n  //   if (this.registerForm.invalid) {\n  //     return;\n  //   } else {\n  //     const tutorialData: Tutorial = {\n  //       title: this.tutorial.title,\n  //       description: this.tutorial.description,\n  //       published: (this.tutorial.published = false),\n  //     };\n  //     tutorialData.categories = this.selectedCategories;\n  //     await this.tutorialService.createTutorial(tutorialData);\n  //     this.router.navigate(['/tutorials']);\n  //     console.log(tutorialData);\n  //   }\n  // }\n  // }\n  // async signup() {\n  //   this.submitted = true;\n  //   if (this.registerForm.invalid) {\n  //     return;\n  //   }\n  //   const tutorialData: Tutorial = {\n  //     title: this.tutorial.title,\n  //     description: this.tutorial.description,\n  //     published: (this.tutorial.published = false),\n  //   };\n  //   tutorialData.categories = this.selectedCategories;\n  //   await this.tutorialService.createTutorial(tutorialData);\n  //   this.router.navigate(['/tutorials']);\n  //   console.log(tutorialData);\n  // }\n\n  async saveTutorial() {\n    if (this.tutorial.title != '') {\n      const tutorialData: Tutorial = {\n        title: this.tutorial.title,\n        description: this.tutorial.description,\n        published: (this.tutorial.published = false),\n      };\n      tutorialData.categories = this.selectedCategories;\n      await this.tutorialService.createTutorial(tutorialData);\n      this.router.navigate(['/tutorials']);\n      console.log(tutorialData);\n    } else {\n      this.submitted = true;\n    }\n  }\n  async updateTutorial() {\n    const tutorialData: Tutorial = {\n      id: this.tutorial.id,\n      title: this.tutorial.title,\n      description: this.tutorial.description,\n      published: (this.tutorial.published = false),\n    };\n    tutorialData.categories = this.selectedCategories;\n    await this.tutorialService.update(tutorialData);\n    this.router.navigate(['/tutorials']);\n    console.log(tutorialData);\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"saveTutorial()\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <input\n      class=\"form-control\"\n      formControlName=\"title\"\n      id=\"title\"\n      required\n      [(ngModel)]=\"tutorial.title\"\n      name=\"title\"\n      [ngClass]=\"{ 'is-invalid': submitted && fval.title.errors }\"\n    />\n    <div *ngIf=\"submitted && fval.title.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"fval.title.errors.required\">Title is Required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Description</label>\n    <input\n      class=\"form-control\"\n      formControlName=\"description\"\n      id=\"description\"\n      required\n      [(ngModel)]=\"tutorial.description\"\n      name=\"description\"\n      [ngClass]=\"{ 'is-invalid': submitted && fval.description.errors }\"\n    />\n    <div *ngIf=\"submitted && fval.title.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"fval.title.errors.required\">Description is Required</div>\n    </div>\n  </div>\n  <br />\n  <div class=\"dropdown-menu\">\n    <select\n      [(ngModel)]=\"selectedCategory.id\"\n      (ngModelChange)=\"onSelected(selectedCategory)\"\n      name=\"first\"\n    >\n      <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">\n        {{ category.title }}\n      </option>\n    </select>\n    <!-- <div *ngIf=\"this.submitted && this.selectedCategories.length == 0\">\n      <span *ngIf=\"this.selectedCategories.length == 0\" style=\"color: red\"\n        >selected atleast one Categories is required</span\n      >\n    </div> -->\n    <br />\n    <br />\n    <button class=\"btn btn-success\">Submit</button>\n    <button type=\"submit\" class=\"btn btn-success\"></button>\n    <button (click)=\"updateTutorial()\" class=\"btn btn-success\">Update</button>\n  </div>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddTutorialComponent } from './components/add-tutorial/add-tutorial.component';\r\nimport { TutorialDetailsComponent } from './components/tutorial-details/tutorial-details.component';\r\nimport { TutorialsListComponent } from './components/tutorials-list/tutorials-list.component';\r\nimport { HeadersInterceptor } from './headers.interceptor';\r\nimport { FormTutorialComponent } from './components/form-tutorial/form-tutorial.component';\nimport { ValidationComponent } from './components/validation/validation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddTutorialComponent,\r\n    TutorialDetailsComponent,\r\n    TutorialsListComponent,\r\n    FormTutorialComponent,\r\n    ValidationComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HeadersInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export class Category {\r\n  id?: number;\r\n  title?: string;\r\n}\r\n","import { newArray } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Tutorial } from 'src/app/models/tutorial.model';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { Category } from '../../models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-tutorials-list',\r\n  templateUrl: './tutorials-list.component.html',\r\n  styleUrls: ['./tutorials-list.component.css'],\r\n})\r\nexport class TutorialsListComponent implements OnInit {\r\n  tutorials?: Tutorial[];\r\n  currentTutorial?: Tutorial;\r\n  categories!: Category[];\r\n  selectedCategory = new Category();\r\n  currentIndex = -1;\r\n  title = '';\r\n  selectedCategories: Category[] = [];\r\n\r\n  constructor(\r\n    private tutorialService: TutorialService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  async retrieveTutorials(): Promise<void> {\r\n    this.tutorials = await this.tutorialService.getAll();\r\n    localStorage.setItem('allTutorials', JSON.stringify(this.tutorials));\r\n    console.log(localStorage.getItem('allTutorials'));\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveTutorials;\r\n    this.currentTutorial = undefined;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveTutorial(tutorial: Tutorial, index: number): void {\r\n    this.currentTutorial = tutorial;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchTitle(): void {\r\n    this.currentTutorial = undefined;\r\n    this.currentIndex = -1;\r\n    this.tutorialService.filterByTitle(this.title);\r\n  }\r\n  onSelected(value: Category) {\r\n    this.selectedCategories.push(value);\r\n  }\r\n  gotoList() {\r\n    this.router.navigate(['/tutorialform/add']);\r\n  }\r\n  // gotoList() {\r\n  //   this.router.navigate(['/validation']);\r\n  // }\r\n\r\n  gotoEdit(id: any) {\r\n    this.router.navigate(['/tutorialform/{{ currentTutorial.id }}']);\r\n  }\r\n}\r\n","<div class=\"list row\">\r\n  <h4>hi</h4>\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by title\"\r\n        [(ngModel)]=\"title\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchTitle()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h4>Tutorials List</h4>\r\n    <button (click)=\"gotoList()\" class=\"btn btn-success\">Add</button>\r\n    <!-- <button class=\"btn btn-success pull-right\">\r\n      <a routerLink=\"/tutorialform\"> Add </a>\r\n    </button> -->\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let tutorial of tutorials; let i = index\"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActiveTutorial(tutorial, i)\"\r\n      >\r\n        {{ tutorial.title }} {{ tutorial.categories | json }}\r\n      </li>\r\n      <br />\r\n    </ul>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentTutorial\">\r\n        <h4>Tutorial</h4>\r\n        <div>\r\n          <label><strong>Title:</strong></label> {{ currentTutorial.title }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Description:</strong></label>\r\n          {{ currentTutorial.description }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Description:</strong></label>\r\n          {{ currentTutorial.categories }}\r\n        </div>\r\n        <div>\r\n          <!-- <label><strong>Status:</strong></label>\r\n          {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\r\n        </div> -->\r\n          <!-- <a class=\"badge badge-warning\" (click)=\"gotoEdit(currentTutorial.id)\">\r\n          Edit\r\n        </a> -->\r\n          <a\r\n            class=\"badge badge-warning\"\r\n            routerLink=\"/tutorialform/{{ currentTutorial.id }}\"\r\n          >\r\n            Edit\r\n          </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"!currentTutorial\">\r\n          <br />\r\n          <p>Please click on a Tutorial...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Category } from './category.model';\r\nexport class Tutorial {\r\n  id?: any;\r\n  title?: string;\r\n  description?: string;\r\n  published?: boolean;\r\n  categories?: Category[] = [];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TutorialsListComponent } from './components/tutorials-list/tutorials-list.component';\r\nimport { TutorialDetailsComponent } from './components/tutorial-details/tutorial-details.component';\r\nimport { AddTutorialComponent } from './components/add-tutorial/add-tutorial.component';\r\nimport { FormTutorialComponent } from './components/form-tutorial/form-tutorial.component';\r\nimport { ValidationComponent } from './components/validation/validation.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tutorials', pathMatch: 'full' },\r\n  { path: 'tutorials', component: TutorialsListComponent },\r\n  { path: 'tutorials/:id', component: TutorialDetailsComponent },\r\n  { path: 'add', component: AddTutorialComponent },\r\n  { path: 'tutorialform/:id', component: FormTutorialComponent },\r\n  { path: 'validation', component: ValidationComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { Tutorial } from 'src/app/models/tutorial.model';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { TutorialsListComponent } from '../tutorials-list/tutorials-list.component';\r\nimport { TutorialDetailsComponent } from '../tutorial-details/tutorial-details.component';\r\nimport { Category } from 'src/app/models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-add-tutorial',\r\n  templateUrl: './add-tutorial.component.html',\r\n  styleUrls: ['./add-tutorial.component.css'],\r\n})\r\nexport class AddTutorialComponent implements OnInit {\r\n  private tutoriallist!: [];\r\n\r\n  tutorial: Tutorial = {\r\n    title: '',\r\n    description: '',\r\n    published: false,\r\n  };\r\n  submitted = false;\r\n\r\n  constructor(private tutorialService: TutorialService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  async saveTutorial1() {\r\n    const data = {\r\n      title: this.tutorial.title,\r\n      description: this.tutorial.description,\r\n      published: (this.tutorial.published = false),\r\n    };\r\n\r\n    await this.tutorialService.createTutorial(data);\r\n  }\r\n\r\n  newTutorial(): void {\r\n    this.submitted = false;\r\n    this.tutorial = {\r\n      title: '',\r\n      description: '',\r\n      published: false,\r\n    };\r\n  }\r\n}\r\n","<div style=\"width: 400px; margin: auto\">\r\n  {{ tutorial.id }}\r\n  <div class=\"submit-form\">\r\n    <div *ngIf=\"!submitted\">\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"title\"\r\n          required\r\n          [(ngModel)]=\"tutorial.title\"\r\n          name=\"title\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"description\"\r\n          required\r\n          [(ngModel)]=\"this.tutorial.description\"\r\n          name=\"description\"\r\n        />\r\n      </div>\r\n\r\n      <button (click)=\"saveTutorial1()\" class=\"btn btn-success\">Submit</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"submitted\">\r\n      <h4>You submitted successfully!</h4>\r\n      <button class=\"btn btn-success\" (click)=\"newTutorial()\">Add</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}